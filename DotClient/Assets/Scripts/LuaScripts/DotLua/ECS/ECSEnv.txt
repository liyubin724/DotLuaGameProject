local oop = require("DotLua/OOP/oop")
local Const = require("DotLua/ECS/Const")
local Contexts = require("DotLua/ECS/Core/Contexts")
local Systems = require("DotLua/ECS/Core/Systems")

local ECSEnv =
    oop.class(
    "DotLua.ECS.ECSEnv",
    function(self)
        self.contexts = nil
        self.systems = nil
    end
)

function ECSEnv:GetContexts()
    return self.contexts
end

function ECSEnv:GetSystems()
    return self.systems
end

function ECSEnv:DoInitlize()
    self.contexts = Contexts()
    self.contexts:BindContextEvent(self, self.onContextCreatedEvent, self.onContextReleasedEvent)

    self:onContextsInitilized()

    self.systems = Systems()
    self:onSystemsInitilized()
end

function ECSEnv:DoUpdate(deltaTime, unscaleDeltaTime)
end

function ECSEnv:DoLateUpdate(deltaTime, unscaleDeltaTime)
end

function ECSEnv:DoDestroy()
    if self[Const.ON_DESTROY_FUNC_NAME] then
        self[Const.ON_DESTROY_FUNC_NAME](self)
    end

    self.contexts:DoDestroy()
    self.contexts = nil
end

function ECSEnv:onContextsInitilized()

end

function ECSEnv:onSystemsInitilized()
end

function ECSEnv:onContextCreatedEvent(context)
end

function ECSEnv:onContextReleasedEvent(context)
end

return ECSEnv
