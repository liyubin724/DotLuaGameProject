local oop = require("DotLua/OOP/oop")
local Servicer = require("DotLua/ECS/Core/Servicer")
local HierarchicalTimer = require("DotLua/Timer/HierarchicalTimer")
local TimerComponent = require("DotLua/ECS/Components/Timer/TimerComponent")
local TimerEndComponent = require("DotLua/ECS/Components/Timer/TimerEndComponent")
local TimerIntervalComponent = require("DotLua/ECS/Components/Timer/TimerIntervalComponent")

local TimerServicer =
    oop.class(
    "DotLua.ECS.Servicers.TimerServicer",
    function(self, dispatcher)
        self.hTimer = HierarchicalTimer()
        self.dispatcher = dispatcher
    end,
    Servicer
)

function TimerServicer:AddTimer(entity)
    local timerComponent = entity:GetComponent(TimerComponent)
    return self.hTimer:AddTimer(
        timerComponent:GetIntervalInSec(),
        timerComponent:GetTotalInSec(),
        self,
        self.onIntervalEvent,
        self.onEndEvent,
        entity
    )
end

function TimerServicer:RemoveTimer(timerIndex)
    self.hTimer:RemoveTimer(timerIndex)
end

function TimerServicer:DoUpdate(deltaTime, unscaleDeltaTime)
    self.hTimer:DoUpdate(deltaTime, unscaleDeltaTime)
end

function TimerServicer:DoDestroy()
end

function TimerServicer:onIntervalEvent(entity)
    entity:AddComponent(TimerIntervalComponent)
end

function TimerServicer:onEndEvent(entity)
    entity:AddComponent(TimerEndComponent)
end

return TimerServicer
