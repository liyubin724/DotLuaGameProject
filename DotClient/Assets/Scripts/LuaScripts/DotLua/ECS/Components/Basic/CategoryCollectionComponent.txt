local oop = require("DotLua/OOP/oop")
local Component = require("DotLua/ECS/Core/Component")
local ListDictionary = require("DotLua/Generic/Collections/ListDictionary")

local tclear = table.clear

local CategoryCollectionComponent =
    oop.class(
    "DotLua.ECS.Components.Basic.CategoryCollectionComponent",
    function(self)
        self.categoryToCollectionDic = {}
    end,
    Component
)

function CategoryCollectionComponent:GetEntities(categoryID)
    local listDic = self.categoryToCollectionDic[categoryID]
    if listDic then
        return listDic:GetItems()
    end
    return nil
end

function CategoryCollectionComponent:AddEntity(categoryID, guid)
    local collection = self.categoryToCollectionDic[categoryID]
    if not collection then
        collection = ListDictionary()
        self.categoryToCollectionDic[categoryID] = collection
    end
    if not collection:HasItem(guid) then
        collection:AddItem(guid, guid)
    end
end

function CategoryCollectionComponent:RemoveEntity(categoryID, guid)
    local collection = self.categoryToCollectionDic[categoryID]
    if collection then
        collection:RemoveItem(guid)
    end
end

function CategoryCollectionComponent:DoRelease()
    tclear(self.categoryToCollectionDic)
end

return CategoryCollectionComponent
