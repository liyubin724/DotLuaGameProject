local oop = require("DotLua/OOP/oop")
local Const = require("DotLua/ECS/Const")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local System =
    oop.class(
    "DotLua.ECS.Core.System",
    function(self)
        self.priority = ESystemPriority.Default
    end
)

function System:GetPriority()
    return self.priority
end

function System:DoInitialize()
    local func = self[Const.ON_INITILIZE_FUNC_NAME]
    if func and type(func) == "function" then
        func(self)
    end
end

function System:DoActivate()
    local func = self[Const.ON_ACTIVATE_FUNC_NAME]
    if func and type(func) == "function" then
        func(self)
    end
end

function System:DoDeactivate()
    local func = self[Const.ON_DEACTIVATE_FUNC_NAME]
    if func and type(func) == "function" then
        func(self)
    end
end

-- function System:DoUpdate(deltaTime, unscaleDeltaTime)
-- end

-- function System:DoLateUpdate(deltaTime, unscaleDeltaTime)
-- end

function System:DoDestroy()
    local func = self[Const.ON_DESTROY_FUNC_NAME]
    if func and type(func) == "function" then
        func(self)
    end
end

return System
