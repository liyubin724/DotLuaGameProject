local oop = require("DotLua/OOP/oop")

local EntityIdentify =
    oop.class(
    "DotLua.ECS.Entities.EntityIdentify",
    function(self,contextName,guid)
        self.contextName = contextName
        self.guid = guid
    end
)

function EntityIdentify:GetIdentify()
    return self.contextName, self.guid
end

function EntityIdentify:SetIdentify(contextName, guid)
    self.contextName = contextName
    self.guid = guid
end

function EntityIdentify:DoGet(contextName, guid)
    self.contextName = contextName
    self.guid = guid
end

function EntityIdentify:DoRelease()
    self.contextName = nil
    self.guid = nil
end

function EntityIdentify:EqualTo(other)
    if not oop.isinstanceof(other, EntityIdentify) then
        return false
    end

    return self.contextName == other.contextName and self.guid == other.guid
end

function EntityIdentify:ToString()
    return string.format("{context = %s,guid = %s}", self.contextName, self.guid)
end

return EntityIdentify
