local oop = require("DotLua/ECS/OOP/oop")
local UpdateSystem = require("DotLua/ECS/Systems/Update/UpdateSystem")

local tinsert = table.insert
local tclear = table.clear

local LogTag = "GroupUpdateSystem"

local GroupUpdateSystem =
    oop.class(
    "DotLua.ECS.Systems.Update.GroupUpdateSystem",
    function(self, group)
        self.group = group

        self.cachedEntities = {}
    end,
    UpdateSystem
)

function GroupUpdateSystem:onTimeUpdate(deltaTime)
    if not self.group then
        return
    end

    local entities = self.group:GetEntities()
    if entities and #entities > 0 then
        for _, entity in ipairs(entities) do
            if self:Filter(entity) then
                tinsert(self.cachedEntities, entity)
            end
        end

        for _, entity in ipairs(self.cachedEntities) do
            self:onEntityUpdate(entity)
        end
        tclear(self.cachedEntities)
    end
end

function GroupUpdateSystem:GetGroup(context)
    return nil
end

function GroupUpdateSystem:Filter(entity)
    return true
end

function GroupUpdateSystem:onEntityUpdate(entity)
    oop.error(LogTag, "this is a abstract class")
end

return GroupUpdateSystem
