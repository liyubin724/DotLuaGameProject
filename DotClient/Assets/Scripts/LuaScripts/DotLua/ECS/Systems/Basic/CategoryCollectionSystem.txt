local oop = require("DotLua/ECS/OOP/oop")
local CommonMatchers = require("DotLua/ECS/CommonMatchers")
local EGroupEvent = require("DotLua/ECS/Core/EGroupEvent")
local Collector = require("DotLua/ECS/Core/Collector")
local Const = require("DotLua/ECS/Const")
local CategoryComponent = require("DotLua/ECS/Components/Basic/CategoryComponent")
local CategoryCollectionComponent = require("DotLua/ECS/Components/Basic/CategoryCollectionComponent")
local CollectorLateUpdateSystem = require("DotLua/ECS/Systems/CollectorLateUpdateSystem")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local CategoryCollectionSystem =
    oop.class(
    "DotLua.ECS.Systems.Basic.CategoryCollectionSystem",
    function(self, context)
        self.collector = Collector(context, CommonMatchers.HaveCategoryComponentMatcher, EGroupEvent.AddedOrRemoved)
        self.priority = ESystemPriority.High
    end,
    CollectorLateUpdateSystem
)

function CategoryCollectionSystem:getUpdateState()
    return false, true, true
end

function CategoryCollectionSystem:onAddedEntityLateUpdate(entity, deltaTime)
    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local categoryCollectionComponent = collectionEntity:GetComponent(CategoryCollectionComponent)

    local guid = entity:GetGUID()
    local categoryComponent = entity:GetComponent(CategoryComponent)
    local categoryID = categoryComponent:GetCategoryID()

    categoryCollectionComponent:AddEntity(categoryID, guid)
end

function CategoryCollectionSystem:onRemovedEntityLateUpdate(entity, deltaTime)
    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local categoryCollectionComponent = collectionEntity:GetComponent(CategoryCollectionComponent)

    local guid = entity:GetGUID()
    local categoryComponent = entity:GetComponent(CategoryComponent)
    local categoryID = categoryComponent:GetCategoryID()

    categoryCollectionComponent:RemoveEntity(categoryID, guid)
end

return CategoryCollectionSystem
