local oop = require("DotLua/ECS/OOP/oop")
local CommonMathcers = require("DotLua/ECS/CommonMathcers")
local GroupEvent = require("DotLua/ECS/Core/GroupEvent")
local Collector = require("DotLua/ECS/Core/Collector")
local Const = require("DotLua/ECS/Const")
local CategoryComponent = require("DotLua/ECS/Components/Basic/CategoryComponent")
local CategoryCollectionComponent = require("DotLua/ECS/Components/Basic/CategoryCollectionComponent")
local LateUpdateSystem = require("DotLua/ECS/Systems/LateUpdateSystem")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local CategoryCollectionSystem =
    oop.class(
    "DotLua.ECS.Systems.Basic.CategoryCollectionSystem",
    function(self, context)
        self.collector = Collector(context, CommonMathcers.HaveCategoryComponentMatcher, GroupEvent.Added)
        self.priority = ESystemPriority.High
    end,
    LateUpdateSystem
)

function CategoryCollectionSystem:onActivate()
    if self.collector then
        self.collector:DoActivate()
    end
end

function CategoryCollectionSystem:onDeactivate()
    if self.collector then
        self.collector:DoDeactivate()
    end
end

function CategoryCollectionSystem:onDestroy()
    if self.collector then
        self.collector:DoDestroy()
    end
    self.collector = nil
end

function CategoryCollectionSystem:onLateUpdate(deltaTime)
    if not self.collector then
        return
    end

    local addedEntities = self.collector:GetCollectedAddedEntities()
    local removedEntities = self.collector:GetCollectedRemovedEntities()

    if #addedEntities == 0 and #removedEntities == 0 then
        return
    end

    local contexts = ecs.GetContexts()
    local collectionEntity = contexts:GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local categoryCollectionComponent = collectionEntity:GetComponent(CategoryCollectionComponent)
    for _, entity in ipairs(addedEntities) do
        local guid = entity:GetGUID()
        local categoryComponent = entity:GetComponent(CategoryComponent)
        local categoryID = categoryComponent:GetCategoryID()

        categoryCollectionComponent:AddEntity(categoryID, guid)
    end

    for _, entity in ipairs(removedEntities) do
        local guid = entity:GetGUID()
        local categoryComponent = entity:GetComponent(CategoryComponent)
        local categoryID = categoryComponent:GetCategoryID()

        categoryCollectionComponent:RemoveEntity(categoryID, guid)
    end
end

return CategoryCollectionSystem
