local oop = require("DotLua/ECS/OOP/oop")
local CommonMatchers = require("DotLua/ECS/CommonMatchers")
local EGroupEvent = require("DotLua/ECS/Core/EGroupEvent")
local Collector = require("DotLua/ECS/Core/Collector")
local Const = require("DotLua/ECS/Const")
local DependOnComponent = require("DotLua/ECS/Components/Basic/DependOnComponent")
local DependedCollectionComponent = require("DotLua/ECS/Components/Basic/DependedCollectionComponent")
local LateUpdateSystem = require("DotLua/ECS/Systems/LateUpdateSystem")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local DependedCollectionSystem =
    oop.class(
    "DotLua.ECS.Systems.Basic.DependedCollectionSystem",
    function(self, context)
        self.collector = Collector(context, CommonMatchers.HaveChildsComponentMathcer, EGroupEvent.AddedOrRemoved)
        self.priority = ESystemPriority.High
    end,
    LateUpdateSystem
)

function DependedCollectionSystem:onActivate()
    if self.collector then
        self.collector:DoActivate()
    end
end

function DependedCollectionSystem:onDeactivate()
    if self.collector then
        self.collector:DoDeactivate()
    end
end

function DependedCollectionSystem:onDestroy()
    if self.collector then
        self.collector:DoDestroy()
    end
    self.collector = nil
end

function DependedCollectionSystem:onLateUpdate(deltaTime)
    if not self.collector then
        return
    end

    local addedEntities = self.collector:GetCollectedAddedEntities()
    local removedEntities = self.collector:GetCollectedRemovedEntities()

    if #addedEntities == 0 and #removedEntities == 0 then
        return
    end

    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local dependedCollectionComponent = collectionEntity:GetComponent(DependedCollectionComponent)
    for _, entity in ipairs(addedEntities) do
        local guid = entity:GetGUID()
        local dependOnComponent = entity:GetComponent(DependOnComponent)
        dependedCollectionComponent:AddEntity(guid, dependOnComponent:GetDepends())
    end

    for _, entity in ipairs(removedEntities) do
        local guid = entity:GetGUID()
        dependedCollectionComponent:RemoveEntity(guid)
    end
end

return DependedCollectionSystem
