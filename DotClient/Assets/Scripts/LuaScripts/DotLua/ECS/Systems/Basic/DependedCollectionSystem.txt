local oop = require("DotLua/OOP/oop")
local CommonMatchers = require("DotLua/ECS/CommonMatchers")
local EGroupEvent = require("DotLua/ECS/Core/EGroupEvent")
local Collector = require("DotLua/ECS/Core/Collector")
local Const = require("DotLua/ECS/Const")
local DependOnComponent = require("DotLua/ECS/Components/Basic/DependOnComponent")
local DependedCollectionComponent = require("DotLua/ECS/Components/Basic/DependedCollectionComponent")
local CollectorUpdateSystem = require("DotLua/ECS/Systems/CollectorUpdateSystem")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local DependedCollectionSystem =
    oop.class(
    "DotLua.ECS.Systems.Basic.DependedCollectionSystem",
    function(self, context)
        self.collector = Collector(context, CommonMatchers.HaveChildsComponentMathcer, EGroupEvent.AddedOrRemoved)
        self.priority = ESystemPriority.High
    end,
    CollectorUpdateSystem
)

function DependedCollectionSystem:getUpdateState()
    return false, true, true
end

function DependedCollectionSystem:onAddedEntityUpdate(entity, deltaTime)
    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local dependedCollectionComponent = collectionEntity:GetComponent(DependedCollectionComponent)

    local guid = entity:GetGUID()
    local dependOnComponent = entity:GetComponent(DependOnComponent)
    dependedCollectionComponent:AddEntity(guid, dependOnComponent:GetDepends())
end

function DependedCollectionSystem:onRemovedEntityUpdate(entity, deltaTime)
    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local dependedCollectionComponent = collectionEntity:GetComponent(DependedCollectionComponent)

    local guid = entity:GetGUID()
    dependedCollectionComponent:RemoveEntity(guid)
end

return DependedCollectionSystem
