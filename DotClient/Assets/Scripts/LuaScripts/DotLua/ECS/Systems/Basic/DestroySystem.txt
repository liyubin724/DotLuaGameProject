local oop = require("DotLua/OOP/oop")
local CollectorLateUpdateSystem = require("DotLua/ECS/Systems/CollectorLateUpdateSystem")
local GroupEvent = require("DotLua/ECS/Core/GroupEvent")
local Collector = require("DotLua/ECS/Core/Collector")
local CommonMathcers = require("DotLua/ECS/CommonMathcers")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local Const = require("DotLua/ECS/Const")

local DestroySystem =
    oop.class(
    "DotLua.ECS.Systems.Basic.DestroySystem",
    function(self, context)
        self.context = context
        self.priority = ESystemPriority.Highest
    end,
    CollectorLateUpdateSystem
)

function DestroySystem:getFrequencyTime()
    return Const.TIME_VLF_UPDATE
end

function DestroySystem:createCollector(context)
    return Collector(context, CommonMathcers.HaveDestroyComponentMatcher, GroupEvent.Added)
end

function DestroySystem:onEntityLateUpdate(entity, deltaTime)
    self.context:ReleaseEntity(entity)
end

return DestroySystem
