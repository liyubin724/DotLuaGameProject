local oop = require("DotLua/ECS/OOP/oop")
local CommonMathcers = require("DotLua/ECS/CommonMathcers")
local EGroupEvent = require("DotLua/ECS/Core/EGroupEvent")
local Collector = require("DotLua/ECS/Core/Collector")
local Const = require("DotLua/ECS/Const")
local GUIDCollectionComponent = require("DotLua/ECS/Components/Basic/GUIDCollectionComponent")
local LateUpdateSystem = require("DotLua/ECS/Systems/LateUpdateSystem")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local GUIDCollectionSystem =
    oop.class(
    "DotLua.ECS.Systems.Basic.GUIDCollectionSystem",
    function(self, context)
        self.collector = Collector(context, CommonMathcers.HaveGUIDComponentMatcher, EGroupEvent.AddedOrRemoved)
        self.priority = ESystemPriority.High
    end,
    LateUpdateSystem
)

function GUIDCollectionSystem:onActivate()
    if self.collector then
        self.collector:DoActivate()
    end
end

function GUIDCollectionSystem:onDeactivate()
    if self.collector then
        self.collector:DoDeactivate()
    end
end

function GUIDCollectionSystem:onDestroy()
    if self.collector then
        self.collector:DoDestroy()
    end
    self.collector = nil
end

function GUIDCollectionSystem:onLateUpdate(deltaTime)
    if not self.collector then
        return
    end

    local addedEntities = self.collector:GetCollectedAddedEntities()
    local removedEntities = self.collector:GetCollectedRemovedEntities()

    if #addedEntities == 0 and #removedEntities == 0 then
        return
    end

    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local guidCollectionComponent = collectionEntity:GetComponent(GUIDCollectionComponent)
    for _, entity in ipairs(addedEntities) do
        guidCollectionComponent:Add(entity:GetGUID())
    end

    for _, entity in ipairs(removedEntities) do
        guidCollectionComponent:Remove(entity:GetGUID())
    end
end

return GUIDCollectionSystem
