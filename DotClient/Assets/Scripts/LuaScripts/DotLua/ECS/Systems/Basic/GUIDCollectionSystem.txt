local oop = require("DotLua/ECS/OOP/oop")
local CommonMathcers = require("DotLua/ECS/CommonMathcers")
local EGroupEvent = require("DotLua/ECS/Core/EGroupEvent")
local Collector = require("DotLua/ECS/Core/Collector")
local Const = require("DotLua/ECS/Const")
local GUIDCollectionComponent = require("DotLua/ECS/Components/Basic/GUIDCollectionComponent")
local CollectorLateUpdateSystem = require("DotLua/ECS/Systems/CollectorLateUpdateSystem")
local ESystemPriority = require("DotLua/ECS/Core/ESystemPriority")

local GUIDCollectionSystem =
    oop.class(
    "DotLua.ECS.Systems.Basic.GUIDCollectionSystem",
    function(self, context)
        self.collector = Collector(context, CommonMathcers.HaveGUIDComponentMatcher, EGroupEvent.AddedOrRemoved)
        self.priority = ESystemPriority.High
    end,
    CollectorLateUpdateSystem
)

function GUIDCollectionSystem:getUpdateState()
    return false, true, true
end

function GUIDCollectionSystem:onAddedEntityLateUpdate(entity, deltaTime)
    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local guidCollectionComponent = collectionEntity:GetComponent(GUIDCollectionComponent)

    local guid = entity:GetGUID()
    guidCollectionComponent:AddEntity(guid)
end

function GUIDCollectionSystem:onRemovedEntityLateUpdate(entity, deltaTime)
    local collectionEntity = ecs.GetGlobalEntity(Const.GLOBAL_ENTITY_COLLECTION_NAME)
    local guidCollectionComponent = collectionEntity:GetComponent(GUIDCollectionComponent)

    local guid = entity:GetGUID()
    guidCollectionComponent:RemoveEntity(guid)
end

return GUIDCollectionSystem
