local oop = require("DotLua/OOP/oop")
local Matcher = require("DotLua/ECS/Core/Matcher")
local Component = require("DotLua/ECS/Core/Component")

local LogTag = "HaveComponentMatcher"

local HaveComponentMatcher =
    oop.class(
    "DotLua.ECS.Matchers.Components.HaveComponentMatcher",
    function(self, componentClass)
        if oop.isDebug then
            if not self.componentClass or oop.isclassof(componentClass, Component) then
                oop.error(LogTag, "the class is not a subclass of Component")
                return
            end
        end

        self.componentClass = componentClass
    end,
    Matcher
)

function HaveComponentMatcher:IsMatch(entity)
    if not self.componentClass then
        return false
    end

    return entity:HasComponent(self.componentClass)
end

return HaveComponentMatcher
