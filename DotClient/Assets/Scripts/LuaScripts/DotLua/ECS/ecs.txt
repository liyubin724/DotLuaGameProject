local oop = require("DotLua/OOP/oop")
local Env = require("DotLua/ECS/Env")

ecs = ecs or {}

ecs.env = nil
ecs.GetEnv = function()
    return ecs.env
end

ecs.GetServicers = function()
    if ecs.env then
        return ecs.env:GetServicers()
    end
    return nil
end

ecs.GetServicer = function(name)
    local servicers = ecs.GetServicers()
    if servicers then
        return servicers:GetServicer(name)
    end
    return nil
end

ecs.GetContexts = function()
    if ecs.env then
        return ecs.env:GetContexts()
    end

    return nil
end

ecs.GetSystems = function()
    if ecs.env then
        return ecs.env:GetSystems()
    end
    return nil
end

ecs.GetGlobalEntity = function(name)
    local contexts = ecs.GetContexts()
    if contexts then
        return contexts:GetGlobalEntity(name)
    end

    return nil
end

ecs.GetCollectionEntity = function()
    if ecs.env then
        return ecs.env:GetCollectionEntity()
    end
    return nil
end

ecs.GetTimerServicer = function()
    if ecs.env then
        return ecs.env:GetTimerServicer()
    end
    return nil
end

ecs.GetMessageServicer = function()
    if ecs.env then
        return ecs.env:GetMessageServicer()
    end

    return nil
end

ecs.Initialize = function(envClass)
    envClass = envClass or Env
    ecs.env = envClass()
    ecs.env:DoInitlize()
end

ecs.Update = function(deltaTime, unscaleDeltaTime)
    if ecs.env then
        ecs.env:DoUpdate(deltaTime, unscaleDeltaTime)
    end
end

ecs.Destroy = function()
    if ecs.env then
        ecs.env:DoDestroy()
    end
    ecs.env = nil
end

oop.asreadonly(ecs)
