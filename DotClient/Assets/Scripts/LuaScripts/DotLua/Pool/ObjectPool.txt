local oop = require("DotLua/OOP/oop")

local tremove = table.remove
local tinsert = table.insert
local tclear = table.clear

local getFuncName = "DoGet"
local releaseFuncName = "DoRelease"

local ObjectPool =
    oop.class(
    "DotLua.Pool.ObjectPool",
    function(self, itemClass)
        self.itemClass = itemClass
        self.items = {}
    end
)

function ObjectPool:GetItem()
    local item

    if #(self.items) > 0 then
        item = self.items[1]
        tremove(self.items, 1)
    else
        item = self.itemClass()
    end

    local getFunc = item[getFuncName]
    if getFunc then
        getFunc(item)
    end

    return item
end

function ObjectPool:GetItemWithParams(...)
    local item

    if #(self.items) > 0 then
        item = self.items[1]
        tremove(self.items, 1)
    else
        item = self.itemClass()
    end

    local getFunc = item[getFuncName]
    if getFunc then
        getFunc(item, ...)
    end

    return item
end

function ObjectPool:ReleaseItem(item)
    if item then
        local releaseFunc = item[releaseFuncName]
        if releaseFunc then
            releaseFunc(item)
        end

        tinsert(self.items, item)
    end
end

function ObjectPool:ReleaseItemWithParams(item, ...)
    if item then
        local releaseFunc = item[releaseFuncName]
        if releaseFunc then
            releaseFunc(item, ...)
        end

        tinsert(self.items, item)
    end
end

function ObjectPool:Clear()
    tclear(self.items)
end

return ObjectPool
