local oop = require('DotLua/OOP/oop')

local sqrt = math.sqrt
local math = math
local acos = math.acos

local Vector2 =
    oop.class(
    'DotLua.Math.Vector2',
    function(self, x, y)
        self.x = x or 0
        self.y = y or 0
    end
)

function Vector2:Get()
    return self.x, self.y
end

function Vector2:GetX()
    return self.x
end

function Vector2:GetY()
    return self.y
end

function Vector2:Set(newx, newy)
    self.x = newx or 0
    self.y = newy or 0
end

function Vector2:GetSqrMagnitude()
    return self.x * self.x + self.y * self.y
end

function Vector2:GetMagnitude()
    return sqrt(self.x * self.x + self.y * self.y)
end

function Vector2:SetNormalize()
    local magnitude = sqrt(self.x * self.x + self.y * self.y)

    if magnitude > 1e-05 then
        self.x = self.x / magnitude
        self.y = self.y / magnitude
    else
        self.x = 0
        self.y = 0
    end

    return self
end

function Vector2:Div(d)
    self.x = self.x / d
    self.y = self.y / d

    return self
end

function Vector2:Mul(d)
    self.x = self.x * d
    self.y = self.y * d

    return self
end

function Vector2:Add(b)
    self.x = self.x + b.x
    self.y = self.y + b.y

    return self
end

function Vector2:Sub(b)
    self.x = self.x - b.x
    self.y = self.y - b.y

    return
end

function Vector2:Clone()
    return Vector2(self.x, self.y)
end

function Vector2:CopyTo(v)
    v:Set(self.x, self.y)
end

function Vector2:CopyFrom(v)
    self:Set(v.x, v.y)
end

Vector2.__tostring = function(self)
    return string.format('(%f,%f)', self.x, self.y)
end

Vector2.__div = function(a, d)
    if type(d) == 'number' then
        return Vector2(a.x / d, a.y / d)
    else
        return Vector2(a / d.x, a / d.y)
    end
end

Vector2.__mul = function(a, d)
    if type(d) == 'number' then
        return Vector2(a.x * d, a.y * d)
    else
        return Vector2(a * d.x, a * d.y)
    end
end

Vector2.__add = function(a, b)
    return Vector2(a.x + b.x, a.y + b.y)
end

Vector2.__sub = function(a, b)
    return Vector2(a.x - b.x, a.y - b.y)
end

Vector2.__unm = function(v)
    return Vector2(-v.x, -v.y)
end

Vector2.__eq = function(a, b)
    return ((a.x - b.x) ^ 2 + (a.y - b.y) ^ 2) < 9.999999e-11
end

Vector2.zero = function()
    return Vector2(0, 0)
end
Vector2.one = function()
    return Vector2(1, 1)
end
Vector2.down = function()
    return Vector2(0, -1)
end
Vector2.left = function()
    return Vector2(-1, 0)
end
Vector2.right = function()
    return Vector2(1, 0)
end
Vector2.up = function()
    return Vector2(0, 0)
end

return Vector2
