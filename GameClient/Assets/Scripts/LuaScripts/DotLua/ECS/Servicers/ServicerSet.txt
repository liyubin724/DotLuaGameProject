local oop = require('DotLua/OOP/oop')
local FuncNameUtility = require('DotLua/ECS/Utility/FuncNameUtility')

local tinsert = table.insert
local tforeach = table.foreach
local tclear = table.clear
local tremovevalue = table.removevalue

local ServicerSet =
    oop.class(
    'ServicerSet',
    function(self)
        self.servicerDic = {}

        self.updateServicers = {}
        self.lateUpdateServicers = {}

        self.isInited = false
    end
)

function ServicerSet:Has(name)
    return self.servicerDic[name] ~= nil
end

function ServicerSet:Add(name, servicer)
    if not self.servicerDic[name] then
        self.servicerDic[name] = servicer

        if servicer[FuncNameUtility.FUNC_NAME_UPDATE] then
            tinsert(self.updateServicers, servicer)
        end
        if servicer[FuncNameUtility.FUNC_NAME_LATEUPDATE] then
            tinsert(self.lateUpdateServicers, servicer)
        end

        if self.isInited and servicer[FuncNameUtility.FUNC_NAME_INITIZLIZE] then
            servicer[FuncNameUtility.FUNC_NAME_INITIZLIZE](servicer)
        end
    else
        oop.error('ECS', 'Servicer:Add->the servicer has been added')
    end
end

function ServicerSet:Remove(name)
    local servicer = self.servicerDic[name]
    if servicer then
        self.servicerDic[name] = nil

        if servicer[FuncNameUtility.FUNC_NAME_UPDATE] then
            tremovevalue(self.updateServicers, servicer)
        end
        if servicer[FuncNameUtility.FUNC_NAME_LATEUPDATE] then
            tremovevalue(self.lateUpdateServicers, servicer)
        end

        if self.isInited and servicer[FuncNameUtility.FUNC_NAME_TEARDOWN] then
            servicer[FuncNameUtility.FUNC_NAME_TEARDOWN](servicer)
        end
    end
    return servicer
end

function ServicerSet:Get(name)
    return self.servicerDic[name]
end

function ServicerSet:DoInitialize()
    tforeach(
        self.servicerDic,
        function(servicer)
            if servicer[FuncNameUtility.FUNC_NAME_INITIZLIZE] then
                servicer[FuncNameUtility.FUNC_NAME_INITIZLIZE](servicer)
            end
        end
    )

    self.isInited = true
end

function ServicerSet:DoUpdate()
    if self.isInited then
        tforeach(
            self.updateServicers,
            function(servicer)
                servicer[FuncNameUtility.FUNC_NAME_UPDATE](servicer)
            end
        )
    end
end

function ServicerSet:DoLateUpdate()
    if self.isInited then
        tforeach(
            self.lateUpdateServicers,
            function(servicer)
                servicer[FuncNameUtility.FUNC_NAME_LATEUPDATE](servicer)
            end
        )
    end
end

function ServicerSet:DoTeardown()
    if self.isInited then
        tforeach(
            self.teardownServicers,
            function(servicer)
                servicer[FuncNameUtility.FUNC_NAME_TEARDOWN](servicer)
            end
        )
    end

    tclear(self.servicerDic)
    tclear(self.updateServicers)
    tclear(self.lateUpdateServicers)
    self.isInited = false
end

return ServicerSet
