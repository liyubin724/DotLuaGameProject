local oop = require('DotLua/OOP/oop')

local MsgDispatcher = oop.using('DotLua/Message/MsgDispatcher')
local UIDCreator = oop.using('DotLua/Generic/UIDCreator')
local ContextSet = oop.using('DotLua/ECS/Contexts/ContextSet')
local SystemSet = oop.using('DotLua/ECS/Systems/SystemSet')
local ServicerSet = oop.using('DotLua/ECS/Servicers/ServicerSet')

local ecs =
    oop.class(
    'ecs',
    function(self)
        self.dispatcher = MsgDispatcher()
        self.idCreator = UIDCreator()

        self.contextSet = ContextSet()
        self.servicerSet = ServicerSet()
        self.systemSet = SystemSet()

        self.isRunning = false
    end
)

function ecs:GetDispatcher()
    return self.dispatcher
end

function ecs:GetNextUID()
    return self.idCreator:GetNextUID()
end

function ecs:GetContext(name)
    return self.contextSet:Get(name)
end

function ecs:CreateContext(name)
    return self.contextSet:Create(name)
end

function ecs:DestroyContext(name)
    self.contextSet:Distroy(name)
end

function ecs:GetServicer(name)
    return self.servicerSet:Get(name)
end

function ecs:AddServicer(name, servicer)
    self.servicerSet:Add(name, servicer)
end

function ecs:RemoveServicer(name)
    self.servicerSet:Remove(name)
end

function ecs:AddSystem(system)
    self.systemSet:Add(system)
end

function ecs:RemoveSystem(system)
    self.systemSet:Remove(system)
end

function ecs:DoInitialize()
    self.isRunning = true

    self.systemSet:DoInitialize()
    self.servicerSet:DoInitialize()
end

function ecs:DoUpdate()
    if self.isRunning then
        self.systemSet:DoUpdate()
        self.servicerSet:DoUpdate()
    end
end

function ecs:DoFrame()
    if self.isRunning then
        self.systemSet:DoFrame()
        self.servicerSet:DoFrame()
    end
end

function ecs:DoLateUpdate()
    if self.isRunning then
        self.systemSet:DoLateUpdate()
        self.servicerSet:DoLateUpdate()
    end
end

function ecs:DoTeardown()
    if self.isRunning then
        self.systemSet:DoTeardown()
        self.servicerSet:DoTeardown()
    end
    self.isRunning = false
end

return ecs
