local oop = require('DotLua/OOP/oop')
local ContextEntityEvent = oop.using('DotLua/ECS/Contexts/ContextEntityEvent')

local DetailEntityData =
    oop.class(
    'DetailEntityData',
    function(self)
        self.entity = nil
        self.entityEventType = nil

        self.addedComponent = nil
        self.removedComponentClass = nil
        self.modifiedComponent = nil
        self.modifiedTag = nil
    end
)

function DetailEntityData:GetEntity()
    return self.entity
end

function DetailEntityData:GetEventType()
    return self.entityEventType
end

function DetailEntityData:GetAddedData()
    if self.entityEventType == ContextEntityEvent.ComponentAdded then
        return self.entity, self.addedComponent
    end

    return nil, nil
end

function DetailEntityData:GetRemovedData()
    if self.entityEventType == ContextEntityEvent.ComponentRemoved then
        return self.entity, self.removedComponentClass
    end
    return nil, nil
end

function DetailEntityData:GetReplacedData()
    if self.entityEventType == ContextEntityEvent.ComponentReplaced then
        return self.entity, self.removedComponentClass, self.addedComponent
    end

    return nil, nil, nil
end

function DetailEntityData:GetModifiedData()
    if self.entityEventType == ContextEntityEvent.ComponentModified then
        return self.entity, self.modifiedComponent, self.modifiedTag
    end

    return nil, nil, nil
end

function DetailEntityData:Init(entity, entityEventType, param1, param2)
    self.entity = entity
    self.entityEventType = entityEventType
    if entityEventType == ContextEntityEvent.ComponentAdded then
        self.addedComponent = param1
    elseif entityEventType == ContextEntityEvent.ComponentRemoved then
        self.removedComponentClass = param1:GetBaseClass()
    elseif entityEventType == ContextEntityEvent.ComponentReplaced then
        self.removedComponentClass = param1:GetBaseClass()
        self.addedComponent = param2
    elseif entityEventType == ContextEntityEvent.ComponentModified then
        self.modifiedComponent = param1
        self.modifiedTag = param2
    end
end

function DetailEntityData:OnRelease()
    self.entity = nil
    self.entityEventType = nil

    self.addedComponent = nil
    self.removedComponentClass = nil
    self.modifiedComponent = nil
    self.modifiedTag = nil
end

return DetailEntityData
