
local List = require ("DotLua/Generic/List")
local Service = require("DotLua/Framework/Service")

local ServiceCenter =
    class(
    function(self)
        self.serviceDic = {}

        self.updateServices = List()
        self.unscaleUpdateServices = List()
        self.lateUpdateServices = List()
        self.fixedUpdateServices = List()
    end
)

function ServiceCenter:DoUpdate(deltaTime)
    if #(self.updateServices) > 0 then
        for i = 1, #(self.updateServices) do
            self.serviceDic[self.updateServices[i]]:DoUpdate(deltaTime)
        end
    end
end

function ServiceCenter:DoUnscaleUpdate(deltaTime)
    if #(self.unscaleUpdateServices) > 0 then
        for i = 1, #(self.unscaleUpdateServices) do
            self.serviceDic[self.unscaleUpdateServices[i]]:DoUnscaleUpdate(deltaTime)
        end
    end
end

function ServiceCenter:DoLateUpdate(deltaTime)
    if #(self.lateUpdateServices) > 0 then
        for i = 1, #(self.lateUpdateServices) do
            self.serviceDic[self.lateUpdateServices[i]]:DoLateUpdate(deltaTime)
        end
    end
end

function ServiceCenter:DoFixedUpdate(deltaTime)
    if #(self.fixedUpdateServices) > 0 then
        for i = 1, #(self.fixedUpdateServices) do
            self.serviceDic[self.fixedUpdateServices[i]]:DoFixedUpdate(deltaTime)
        end
    end
end

function ServiceCenter:HasService(name)
    return self.serviceDic[name] ~= nil
end

function ServiceCenter:RegisterService(name,service)
    if name and service and service:is_a(Service) then
        if self:HasService(name) then
            return false
        end

        self.serviceDic[name] = service

        if service["DoUpdate"] ~= nil then
            self.updateServices:Add(name)
        end
        if service["DoUnscaleUpdate"] ~= nil then
            self.unscaleUpdateServices:Add(name)
        end
        if service["DoLateUpdate"] ~= nil then
            self.lateUpdateServices:Add(name)
        end
        if service["DoFixedUpdate"] ~= nil then
            self.fixedUpdateServices:Add(name)
        end

        return true
    end

    return false
end

function ServiceCenter:RemoveService(name)
    if not name or #(name) == 0 then
        return nil
    end

    local service = self.serviceDic[name]
    if service then
        self.serviceDic[name] = nil
        service:DoRemove()

        self.updateServices:Remove(name)
        self.unscaleUpdateServices:Remove(name)
        self.lateUpdateServices:Remove(name)
        self.fixedUpdateServices:Remove(name)
    end
end

function ServiceCenter:RetrieveService(name)
    return self.serviceDic[name]
end

function ServiceCenter:DoDispose()

end

return ServiceCenter