Assembly = {}
Assembly.__index = Assembly
Assembly.classes = {}

function Assembly.GetClasses()
    return Assembly.classes
end

function Assembly.LoadClass(path)
    local targetClass = require(path)

    Assembly.classes[path] = targetClass

    return targetClass
end

function Assembly.UnloadClass(path)
    Assembly.classes[path] = nil
end

function Assembly.GetOrLoadClass(path)
    local targetClass = Assembly.classes[path]
    if not targetClass then
        targetClass = require(path)

        if targetClass then
            Assembly.classes[path] = targetClass
        end
    end

    return targetClass
end

function Assembly.HasClass(path)
    return Assembly.classes[path] ~= nil
end

function Assembly.CreateInstance(path)
    local targetClass = Assembly.GetOrLoadClass(path)
    if targetClass then
        return targetClass()
    end

    return nil
end

function Assembly.CreateInstanceWithParams(path, ...)
    local targetClass = Assembly.GetOrLoadClass(path)
    if targetClass then
        return targetClass(...)
    end

    return nil
end

function Assembly.UnloadAll()
    Assembly.classes = {}
end