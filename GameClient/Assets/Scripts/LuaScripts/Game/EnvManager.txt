require('DotLua/Class')
require('DotLua/Delegate')
require('Game/Event/EventID')

local DebugLog = DebugLog
local Game = Game

EnvManager =
    Class(
    function(self)
        self.updateDelegate = Delegate()

        self.updateInterval = 0.1
        self.elapseInterval = 0
    end
)

function EnvManager:AddUpdateDelegate(receiver, func)
    self.updateDelegate = self.updateDelegate + {receiver, func}
end

function EnvManager:RemoveUpdateDelegate(receiver, func)
    self.updateDelegate = self.updateDelegate - {receiver, func}
end

function EnvManager:DoStartup()
    Game.EventMgr:Trigger(EventID.Startup)
    Game.AssetMgr:InstanceAssetAsync('Cube', self, nil, EnvManager.OnCubeLoadComplete)

    local eventMgr = Game.EventMgr
    eventMgr:RegisterListener(111,self,EnvManager.OnMessage,"EventTest")

    local timerMgr = Game.TimerMgr
    --local handler = timerMgr:AddIntervalTimer(1,self,EnvManager.OnIntervalTimer,"Test Timer")
    --local handler = timerMgr:AddEndTimer(3,self,EnvManager.OnEndTimer,"Test End Timer")
    self.timerHandler = timerMgr:AddTimer(1,5,self,EnvManager.OnIntervalTimer, EnvManager.OnEndTimer,"Test Interval and End Timer")
    DebugLog.Info("Timer Test", tostring(self.timerHandler))
    self.timerIndex = 0

end

function EnvManager:OnMessage(eventID,userdata)
    DebugLog.Info("Event", "message:="..tostring(userdata))

    Game.EventMgr:UnregisterListener(111,self,EnvManager.OnMessage)
end

function EnvManager:OnIntervalTimer(userdata)
    self.timerIndex = self.timerIndex+1
    if self.timerIndex%2 == 0 then
        Game.EventMgr:Trigger(111)
    end
    DebugLog.Info("Timer Interval", userdata)
end

function EnvManager:OnEndTimer(userdata)
    DebugLog.Info("Timer End", userdata)
end



function EnvManager:DoUpdate(deltaTime)
    self.elapseInterval = self.elapseInterval + deltaTime
    if self.elapseInterval >= self.updateInterval then
        self.elapseInterval = self.elapseInterval - self.updateInterval

        if #(self.updateDelegate) > 0 then
            self.updateDelegate:Invoke(self.updateInterval)
        end
    end

    Game.TimerMgr:DoUpdate(deltaTime)
end

--------------------Test---------------------------
function EnvManager:OnCubeLoadComplete(address, uObject, userdata)
    DebugLog.Info('EnvManager', 'Cube loaded')

    local transform = uObject.transform
    transform.localPosition = CS.UnityEngine.Vector3.one
end
