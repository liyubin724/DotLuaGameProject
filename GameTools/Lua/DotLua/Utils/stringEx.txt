local string = _G.string
local sgsub = string.gsub
local sfind = string.find
local sreverse = string.reverse
local tinsert = table.insert

function string.trim(str, symbol)
    symbol = symbol or '%s' -- %s default match space \t \n etc..
    return (sgsub(sgsub(str, '^' .. symbol .. '*', ''), symbol .. '*$', ''))
end

function string.ltrim(str, symbol)
    symbol = symbol or '%s' -- %s default match space \t \n etc..
    return sgsub(str, '^' .. symbol .. '*', '')
end

function string.rtrim(str, symbol)
    symbol = symbol or '%s' -- %s default match space \t \n etc..
    return sgsub(str, symbol .. '*$', '')
end

function string.startswith(str, substr)
    if str == nil or substr == nil then
        return false
    end
    if sfind(str, substr) ~= 1 then
        return false
    else
        return true
    end
end

function string.endswith(str, substr)
    if str == nil or substr == nil then
        return false
    end
    local str_reverse = sreverse(str)
    local substr_reverse = sreverse(substr)
    if sfind(str_reverse, substr_reverse) ~= 1 then
        return false
    else
        return true
    end
end

function string.split(str, delimiter)
    if not str or str == '' then
        return {}
    end
    if not delimiter or delimiter == '' then
        return {str}
    end

    local result = {}
    for match in (str .. delimiter):gmatch('(.-)' .. delimiter) do
        tinsert(result, match)
    end
    return result
end

function string.replace(str, findString, replaceString)
    return (sgsub(str, findString, replaceString))
end
