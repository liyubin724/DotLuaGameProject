local oop = require('DotLua/ECS/OOP/oop')
local FSMStatePlugin = require('DotLua/ECS/Systems/FSM/FSMStatePlugin')
local ReactiveTimeSystem = require("DotLua/ECS/Systems/Components/ReactiveTimeSystem")

local LogTag = "FSMMatchineSystem"

local FSMMatchineSystem =
    oop.class(
    'DotLua.ECS.Systems.FSM.FSMMatchineSystem',
    function(self)
        self.nameToStateDic = {}
    end,
    ReactiveTimeSystem
)

function FSMMatchineSystem:RegisterState(statePlugin)
    if not statePlugin or oop.isclassof(statePlugin,FSMStatePlugin) then
        oop.error(LogTag,"the state is nil or is not a instance of FSMStatePlugin")
        return
    end

    local stateName = statePlugin:GetStateName()
    if self.nameToStateDic[stateName] ~= nil then
        oop.error(LogTag,"the state has been register")
        return
    end

    self.nameToStateDic[stateName] = statePlugin
    statePlugin:DoInitilize(self)
end

function FSMMatchineSystem:UnregisterState(stateName)
    self.nameToStateDic[stateName] = nil
end

function FSMMatchineSystem:onEntityUpdate(entity, deltaTime)
    
end

return FSMMatchineSystem
