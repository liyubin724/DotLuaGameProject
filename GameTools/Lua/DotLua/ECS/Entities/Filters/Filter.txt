local oop = require('DotLua/OOP/oop')

local tforeach = table.foreach

local LogTag = 'Filter'

local Filter =
    oop.class(
    'DotLua.ECS.Entities.Filters.Filter',
    function(self, name, contextNames)
        self.name = name

        if not contextNames then
            oop.error(LogTag,"the name of contenxt which will be attached is nil")
        else
            self.contextNameDic = {}
            tforeach(
                contextNames,
                function(_,cName)
                    self.contextNameDic[cName] = true
                end
            )
        end
    end
)

function Filter:GetName()
    return self.name
end

function Filter:GetResult(...)
    oop.error(LogTag,"the method(GetEntities)should be implementate")
    return nil
end

function Filter:IsNeedCatched(entity)
    oop.error(LogTag,"the method(IsNeedCatched)should be implementate")
    return false
end

function Filter:DoCatchEntity(entity)
end

function Filter:onEntityChanged(contextName, entity)
    if not self.contextNameDic then
        return
    end

    if not self.contextNameDic[contextName] then
        return
    end

    if self:IsNeedCatched(contextName, entity) then
        self:DoCatchEntity(entity)
    end
end

return Filter
