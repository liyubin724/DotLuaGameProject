local oop = require('DotLua/OOP/oop')
local GroupEvent = oop.using('DotLua/ECS/Groups/GroupEvent')

local tinsert = table.insert
local tclear = table.clear

local Collector =
    oop.class(
    'DotLua.ECS.Collectors.Collector',
    function(self, group, groupEvents)
        self.isEnable = false

        self.group = group
        self.groupEventEnableDic = {}
        if not groupEvents then
            for _, groupEvent in ipairs(groupEvents) do
                self.groupEventEnableDic[groupEvent] = true
            end
        else
            self.groupEventEnableDic[GroupEvent.EntityAdded] = true
            self.groupEventEnableDic[GroupEvent.EntityRemoved] = false
        end

        self.collectedAddedEntities = {}
        self.collectedRemovedEntities = {}
    end
)

function Collector:IsEnable()
    return self.isEnable
end

function Collector:GetCollecteAddedDataCount()
    return #self.collectedAddedEntities
end

function Collector:GetCollecteAddedDatas()
    return self.collectedAddedEntities
end

function Collector:ClearCollecteAddedDatas()
    tclear(self.collectedAddedEntities)
end

function Collector:GetCollecteRemovedDataCount()
    return #self.collectedRemovedEntities
end

function Collector:GetCollecteRemovedDatas()
    return self.collectedRemovedEntities
end

function Collector:ClearCollecteRemovedDatas()
    tclear(self.collectedRemovedEntities)
end

function Collector:ClearCollecteDatas()
    tclear(self.collectedAddedEntities)
    tclear(self.collectedRemovedEntities)
end

function Collector:Activate()
    if self.group and not self.isEnable then
        self.isEnable = true
        self.group:BindEvent(self, self.onGroupChanged)
    end
end

function Collector:Deactivate()
    if self.group and self.isEnable then
        self.isEnable = false
        self.group:UnbindEvent(self, self.onGroupChanged)
    end
end

function Collector:Destroy()
    if self.isEnable then
        self:Deactivate()
    end

    tclear(self.collectedEntities)
    self.group = nil
    self.groupEvents = nil
end

function Collector:onGroupChanged(groupEvent, entity)
    if self.groupEventEnableDic[groupEvent] then
        local list
        if groupEvent == GroupEvent.EntityAdded then
            list = self.collectedAddedEntities
        elseif groupEvent == GroupEvent.EntityRemoved then
            list = self.collectedRemovedEntities
        end
        if not list then
            for _, e in ipairs(list) do
                if e == entity then
                    return
                end
            end

            tinsert(list, entity)
        end
    end
end

return Collector
