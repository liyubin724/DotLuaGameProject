local oop = require('DotLua/OOP/oop')
local GroupEvent = oop.using('DotLua/ECS/Groups/GroupEvent')
local ContextEvent = oop.using('DotLua/ECS/Contexts/ContextEvent')

local tinsert = table.insert
local tclear = table.clear
local tcontainsvalue = table.containsvalue
local tremovevalue = table.removevalue

local Collector =
    oop.class(
    'DotLua.ECS.Collectors.Collector',
    function(self, group, groupEvent)
        self.isEnable = false

        self.group = group
        self.groupEvent = groupEvent

        self.collectedEntities = {}
    end
)

function Collector:IsEnable()
    return self.isEnable
end

function Collector:GetCollectedEntityCount()
    return #self.collectedEntities
end

function Collector:GetCollectedEntities()
    return self.collectedEntities
end

function Collector:ClearCollectedEnities()
    tclear(self.collectedEntities)
end

function Collector:Activate()
    if self.group and not self.isEnable then
        self.isEnable = true
        if self.groupEvent then
            local addFunc
            local removeFunc
            if self.groupEvent == GroupEvent.Added then
                addFunc = self.onGroupChangedEvent
            elseif self.groupEvent == GroupEvent.Removed then
                removeFunc = self.onGroupChangedEvent
            elseif self.groupEvent == GroupEvent.AddOrRemove then
                addFunc = self.onGroupChangedEvent
                removeFunc = self.onGroupChangedEvent
            end

            self.group:BindEvent(self, addFunc, removeFunc)
        end
    end
end

function Collector:Deactivate()
    if self.group and self.isEnable then
        self.isEnable = false
        if self.groupEvent then
            local addFunc
            local removeFunc
            if self.groupEvent == GroupEvent.Added then
                addFunc = self.onGroupChangedEvent
            elseif self.groupEvent == GroupEvent.Removed then
                removeFunc = self.onGroupChangedEvent
            elseif self.groupEvent == GroupEvent.AddOrRemove then
                addFunc = self.onGroupChangedEvent
                removeFunc = self.onGroupChangedEvent
            end

            self.group:UnbindEvent(self, addFunc, removeFunc)
        end
    end
end

function Collector:Destroy()
    if self.isEnable then
        self:Deactivate()
    end

    tclear(self.collectedEntities)

    self.group = nil
    self.groupEvent = nil
end

function Collector:onGroupChangedEvent(entity,contextEvent)
    if contextEvent == ContextEvent.EntityReleased then
        tremovevalue(self.entities,entity)
    else
        if not tcontainsvalue(self.entities, entity) then
            tinsert(self.entities, entity)
        end
    end
end

return Collector
