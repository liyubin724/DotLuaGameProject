local oop = require('DotLua/OOP/oop')
local GroupEvent = require('DotLua/ECS/Groups/GroupEvent')

local tinsert = table.insert
local tremove = table.remove
local tclear = table.clear

local LogTag = 'Group'

local Group =
    oop.class(
    'DotLua.ECS.Groups.Group',
    function(self)
        self.matcher = nil

        self.entities = {}
        self.guidToIndexDic = {}

        self.onGroupChangedEvent = oop.event()

        self.refCount = 0
    end
)

function Group:GetMatcher()
    return self.matcher
end

function Group:GetEntityCount()
    return #(self.entities)
end

function Group:GetEntities()
    return self.entities
end

function Group:RetainRef()
    self.refCount = self.refCount + 1
end

function Group:ReleaseRef()
    self.refCount = self.refCount - 1
    if self.refCount < 0 then
        oop.error(LogTag, 'the count of the ref is less 0')
        self.refCount = 0
    end
end

function Group:IsInUsing()
    return self.refCount > 0
end

function Group:DoGet(context, matcher)
    self.matcher = matcher
end

function Group:DoRelease()
    self.onGroupChangedEvent:Clear()

    self.matcher = nil
    tclear(self.guidToIndexDic)
    tclear(self.entities)

    self.refCount = 0
end

function Group:BindEvent(receiver, changedFunc)
    if changedFunc then
        self.onGroupChangedEvent:Add(receiver, changedFunc)
    end
end

function Group:UnbindEvent(receiver, changedFunc)
    if changedFunc then
        self.onGroupChangedEvent:Add(receiver, changedFunc)
    end
end

function Group:UnbindAllEvent()
    self.onGroupChangedEvent:Clear()
end

function Group:TryAddEntity(entity, contextEvent, entityEvent, param1, param2)
    local guid = entity:GetGUID()
    if not self.guidToIndexDic[guid] then
        tinsert(self.entities, entity)
        self.guidToIndexDic[guid] = #self.entities

        self.onGroupChangedEvent:Invoke(GroupEvent.EntityAdded, entity, contextEvent, entityEvent, param1, param2)
        return true
    end

    return false
end

function Group:TryRemoveEntity(entity, contextEvent, entityEvent, param1, param2)
    local guid = entity:GetGUID()
    if self.guidToIndexDic[guid] then
        local index = self.guidToIndexDic[guid]
        tremove(self.entities, index)
        self.guidToIndexDic[guid] = nil

        self.onGroupChangedEvent:Invoke(GroupEvent.EntityRemoved, entity, contextEvent, entityEvent, param1, param2)
    end

    return false
end

return Group
