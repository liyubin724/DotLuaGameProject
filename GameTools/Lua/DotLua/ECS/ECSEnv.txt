local oop = require('DotLua/OOP/oop')

local SystemManager = require('DotLua/ECS/Systems/SystemManager')
local ServicerManager = require('DotLua/ECS/Servicers/ServicerManager')
local ContextManager = require('DotLua/ECS/Contexts/ContextManager')

local ECSEnv =
    oop.class(
    'DotLua.ECS.ECSEnv',
    function(self)
        self:initilize()
    end
)

function ECSEnv:GetServicerMgr()
    return self.servicerMgr
end

function ECSEnv:GetSystemMgr()
    return self.systemMgr
end

function ECSEnv:GetContextMgr()
    return self.contextMgr
end

function ECSEnv:Startup()
    if self.systemMgr then
        self.systemMgr:Startup()
    end
end

function ECSEnv:Update(deltaTime, unscaleDeltaTime)
    if self.systemMgr then
        self.systemMgr:Update(deltaTime,unscaleDeltaTime)
    end
end

function ECSEnv:LateUpdate(deltaTime, unscaleDeltaTime)
    if self.systemMgr then
        self.systemMgr:LateUpdate(deltaTime,unscaleDeltaTime)
    end
end

function ECSEnv:FrameUpdate(deltaTime)
    if self.systemMgr then
        self.systemMgr:FrameUpdate(deltaTime)
    end
end

function ECSEnv:Teardown()
    if self.systemMgr then
        self.systemMgr:Teardown()
    end
end

function ECSEnv:initilize()
    self.servicerMgr = ServicerManager()
    self.systemMgr = SystemManager()
    self.contextMgr = ContextManager()

    self:initilizeServicers()
    self.initilizeContexts()
    self.initilizeSystems()
end

function ECSEnv:initilizeServicers()
end

function ECSEnv:initilizeContexts()
end

function ECSEnv:initilizeSystems()
end

return ECSEnv
